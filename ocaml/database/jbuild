(* -*- tuareg -*- *)
#require "unix"

let flags = function
| [] -> ""
| pkgs ->
  let cmd = "ocamlfind ocamlc -verbose" ^ (
    List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
  ) in
  let ic = Unix.open_process_in
    (cmd ^ " | grep -oEe '-ppx (\"([^\"\\]|\\.)+\"|\\w+)'")
  in
  let rec go ic acc =
    try go ic (acc ^ " " ^ input_line ic) with End_of_file -> close_in ic; acc
  in
  go ic ""

let rewriters = ["ppx_deriving_rpc"; "ppx_sexp_conv"]

let coverage_rewriter =
  let is_coverage = try Unix.getenv "BISECT_ENABLE" = "YES" with Not_found -> false in
  if is_coverage then
    "(preprocess (pps (bisect_ppx -conditional)))"
  else
    ""

let () = Printf.ksprintf Jbuild_plugin.V1.send {|
(ocamllex (db_filter_lex))
(ocamlyacc (db_filter_parse))

(library
 ((name xapi_database)
  (public_name xapi-database)
  (flags (:standard -w -39 -bin-annot %s))
  (modules (:standard \
   database_server_main
   db_cache_test
   block_device_io
   unit_test_marshall
   unit_test_sql
  ))
  (libraries (
   rpclib
   ppx_sexp_conv
   sexpr
   threads
   http-svr
   gzip
   uuid
   xapi-stdext-encodings
   xapi-stdext-monadic
   xapi-stdext-pervasives
   xapi-stdext-std
   xapi-stdext-threads
   xapi-stdext-unix
   xcp
  ))
  (wrapped false)
  %s
 )
)

(executable
 ((name block_device_io)
  (public_name block_device_io)
  (package xapi)
  (modules (
   block_device_io
  ))
  (libraries (
   xapi-database
  ))
 )
)

(executable 
 ((name db_cache_test)
  (modules (db_cache_test))
  (libraries (
    oUnit
    xapi-database
  ))
))

(executable
 ((name unit_test_marshall)
  (modules (
    unit_test_marshall
    ))
  (libraries (
    xapi-database
  ))
 )
)

(executable
 ((name unit_test_sql)
  (modules (unit_test_sql))
  (libraries (xapi-database))
 )
)

(executable
 ((name database_server_main)
  (modules (
    database_server_main
    ))
  (libraries (
    xapi-database
    threads
    xapi-stdext-threads
    http-svr
  ))
 )
)

(alias
 ((name runtest)
  (deps (unit_test_marshall.exe))
  (package xapi-database)
  (action (run ${<}))
 )
)

(alias
 ((name runtest)
  (deps (unit_test_sql.exe sql_msg_example.txt))
  (package xapi-database)
  (action (run ${<}))
 )
)

(alias
 ((name runtest)
  (deps (database_server_main.exe))
  (package xapi-database)
  (action (run ${<} --master db.xml --test))
 )
)

(alias
 ((name runtest)
  (deps (db_cache_test.exe))
  (package xapi-database)
  (action (run ${<}))
 )
)

|} (flags rewriters) coverage_rewriter
